@page "/settings"
@using MainAppIotHub.ViewModels
@inject SettingsViewModel viewModel

<div id="settings-container" class="container">

    <h3 class="headline"><i class="fa-solid fa-gear"></i> | SETTINGS</h3>

    <div class="prompt">
        <div id="connection-status" class="body">
            <h3>Connection to Azure IoT Hub: </h3>
            <i class="fa-solid fa-wifi @(viewModel.IsInitialized ? "initialized" : null)"></i>
            <p>@(viewModel.IsInitialized ? "(Connected)" : "(Not Connected)")</p>
        </div>
    </div>

    <div class="form-container">
        <form @onsubmit="HandleConnectionStringSubmit">
            <div>
                <label for="connectionstring">Azure IoT Hub Connection String</label>
                <input type="text" id="connectionstring" placeholder="Enter your connection string" @bind="viewModel.ConnectionString" />
                <span class="validator">@connectionStringValidationMessage</span>
            </div>
            
            <button class="submit-btn" type="submit">Connect</button>
        </form>
    </div>

    <div class="form-container">
        <form @onsubmit="HandleEmailSubmit">
            <div>
                <label for="email">Email</label>
                <p class="email-feedback-message"><i class="fa-solid fa-check"></i> @viewModel.EmailFeedbackMessage</p> 
                <input type="text" id="email" placeholder="Enter your email" @bind="viewModel.Email" />  
                <span class="validator">@emailValidationMessage</span>
            </div>

            <button class="submit-btn" type="submit">Save</button>
        </form>
    </div>

</div>

@code {
    private string? connectionStringValidationMessage;
    private string? emailValidationMessage;

    protected override void OnInitialized()
    {
        viewModel.EnsureInitialized();
        viewModel.LoadEmail();
    }

    private void HandleConnectionStringSubmit()
    {
        ClearForm();

        if (string.IsNullOrWhiteSpace(viewModel.ConnectionString))
        {
            connectionStringValidationMessage = "Connection string cannot be null or white space!";
            return;
        }

        var success = viewModel.InitializeIotHubHandler();

        if (!success)
        {
            connectionStringValidationMessage = "Connection to Azure IoT Hub with the specified connection string could not be made.";
            return;
        }

        viewModel.EnsureInitialized();
    }

    private void HandleEmailSubmit()
    {
        ClearForm();

        if (string.IsNullOrWhiteSpace(viewModel.Email))
        {
            emailValidationMessage = "Email cannot be null or white space!";
            return;
        }

        viewModel.SaveEmail();
    }

    private void ClearForm()
    {
        connectionStringValidationMessage = string.Empty;
        emailValidationMessage = string.Empty;
    }
}
